language: rust

#test on all 3 channels
rust:
  - stable
  - beta
  - nightly

env:
  global:
    - RUST_BACKTRACE=1
    - NVIMPAM_LOG_FILE=nvimpamlog
    - NVIMPAM_LOG_LEVEL=debug
    - NVIMPAM_STDERR=nvimpamstderr

#build failures only when on stable
matrix:
  allow_failures:
    - rust: nightly
    - rust: beta

# should speed it up a bit, not sure what depth is good
git:
  depth: 3
# more speedup by caching dependencies as long as the compiler isn't upgraded
cache: cargo

#run on both linux and osx
os:
  - linux
  - osx

# add an additional stage functionaltest for integration tests with neovim
jobs:
  include:
    - stage: functionaltest
      # build plugin first, then run the test from neovim
      script: cargo build && cargo build --release && cd neovim && git submodule init
              && git submodule update --remote --depth 50
              && TEST_FILE=../test/nvimpam_spec.lua make functionaltest
              && cd .. && RUSTFLAGS="-C opt-level=0" cargo bench
              ; echo NVIMPAMSTDERR && cat nvimpamstderr
      # cache it all, especially the neovim sources won't change often
      cache: 
        - cargo 
      os: linux 
    #reproduce the same for osx
    - stage: functionaltest
      script: cargo build && cargo build --release && cd neovim && git submodule init
              && git submodule update --remote --depth 50
              && brew update && brew install ninja && brew install gettext
              && brew reinstall -s libtool
              && TEST_FILE=../test/nvimpam_spec.lua make functionaltest
              && cd .. && RUSTFLAGS="-C opt-level=0" cargo bench
              ; echo NVIMPAMSTDERR && cat nvimpamstderr
      cache: 
        - cargo
      os: osx
      osx_image: xcode7.3
