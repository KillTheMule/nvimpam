*nvimpam.txt*                                                          *nvimpam*


                            NVIMPAM DOCUMENTATION


Development of nvimpam.                                            *development*

Nvimpam is open source software. Everybody is encouraged to contribute.

    https://github.com/KillTheMule/nvimpam

You're very welcome to step by to report bugs or request features.

                                      Type |gO| to see the table of contents.

==============================================================================
Overview                                                      *nvimpam-overview*

Nvimpam is a neovim |rpc| plugin for editing input files for the FEM solver
PAMCRASH. It provides folding, syntax highlighting and a menu to insert new
cards into the buffer (this feature depends on `Vigemus/impromptu.nvim` being
installed).


Differences with vim-pamcrash-syntax           *vim-pamcrash-syntax-differences*

If you're editing pamcrash input files, check out

          https://www.vim.org/scripts/script.php?script_id=5283

which provides additional functionality. The only thing it is missing is
_working_ folding support. It has basic support, but performance is forbidding
even on quite small files. Folding support from nvimpam is much faster. The
fact that rpc plugins work asynchronously means that even on huge files you
can start working or scrolling around while the folding data is computed.

==============================================================================
Nvimpam commands                                              *nvimpam-commands*

Nvimpam provides the following commands:

NvimPamAttach                                                   *:NvimPamAttach*

Attaches an nvimpam process to the current buffer. It will process the
buffer's contents, and create (and close) the folds. Depending on the size of
the buffer you might feel a small delay (due to having to transfer the
buffer's contents), but you will be able to use nvim before the folds have
been computed.

NvimPamDetach                                                   *:NvimPamDetach*

Detaches an nvimpam process from the current buffer. You will only need to do
this if you manually wish to disable nvimpam after starting it.

NvimPamHighlightScreen                                 *:NvimPamHighlightScreen*

Applies syntax highlighting to a portion of the buffer that includes the
currently shown lines (the reason it might be slighly more is that we extend
this to full cards).

NvimPamUpdateFolds                                         *:NvimPamUpdateFolds*

Ask nvimpam to recompute and apply all folds. After initially creating and
closing the folds for you, it will not do so subsequently. It will however
keep track of the changes to the buffer, so updating the folds will be very
fast.

NvimPamMenu                                                       *:NvimPamMenu*

Opens a menu to let you choose a pamcrash card to insert in to the buffer.
Selection is key-based. Depends on `Vigemus/impromptu.nvim` being installed.

==============================================================================
Nvimpam syntax highlighting                        *nvimpam-syntax-highlighting*

Syntax highlighting can be actived in two ways: Explicitely requesting it via
|NvimPamHighlightScreen|, or implicitely, by editing the buffer. In the latter
case, a suitable part of the buffer will be highlighted. 

Note: Syntax highlighting has been restricted this way for performance
reasons. Highlighting a full include might hinder working fluently, and
browsing a full file is out of the question anyways.

==============================================================================
Nvimpam configuration                                    *nvimpam-configuration*

Nvimpam needs no configuration. You may however wish to put

  filetype plugin on

  augroup nvimpam
    augroup!
    autocmd FileType pamcrash nnoremap <F5> :NvimPamUpdateFolds
    autocmd FileType pamcrash NvimPamAttach
  augroup END

in your init.vim. It will automatically start nvimpam when you're editing a
PAMCRASH file, and you can update the folds by simply pressing <F5>. Remember
to put `filetype plugin on` before this, though.

Logging                                                       *nvimpam-logging*

If you want logging, set the following environment variables:

 - `NVIMPAM_LOG_FILE` is the path to the log file (no logging if this is empty)
 - `NVIMPAM_LOG_LEVEL` can be one of `error`, `warn`, `info`, `debug` and `trace`, in
    ascending order of verbosity. The default is `warn`.
 - `NVIMPAM_STDERR` is the path to a file where the stderr of the addon
   will be logged. Mostly usefull for debugging crashes.

Healthcheck                                                *nvimpam-checkhealth*

To debug nvimpam, run `:checkhealth nvimpam.` It will print the binary used
and check for availability of the neccessary Neovim RPC API.  

 vim:tw=78:ts=8:ft=help:norl:
